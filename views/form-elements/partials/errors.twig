{% macro common() %}
    <div class="form-group">
        <div class="alert" role="alert">
            <h3 style="margin-top: 0">В форме приуствуют ошибки:</h3>
            <p>Поле "Возраст" обязательно для заполнения.</p>
        </div>
    </div>
    <div class="form-group">
        <label for="name-no-errors">Ваше имя</label>
        <input id="name-no-errors" type="text" name="name-no-errors" value="">
    </div>
    <div class="form-group">
        <label for="age">Возраст (обязательно для заполнения)</label>
        <input id="age" type="number" name="age" aria-invalid="true" aria-required="true">
    </div>
{% endmacro %}

{% macro input() %}
<div class="form-group">
    <label for="field-no-errors">Поле без ошибки</label>
    <input id="field-no-errors" type="text" name="field-no-errors">
</div>
<div class="form-group">
    <label for="field">Поле с ошибкой</label>
    <input id="field" type="text" name="field" aria-labelledby="form-field-error" aria-invalid="true">
    <p id="form-field-error">Поле обязательно для заполнения.</p>
</div>
{% endmacro %}

{% import _self as view %}

<p>В настоящем разделе мы рассмотрим лишь принципы сообщения пользователям о наличии ошибок в формах. Практическая реализация, как правило, под каждую форму будет уникальна.</p>

<p>Общие положения:</p>
<ul>
    <li>Никогда не полагайтесь на цветовое выделение поля как выделение ошибки. Например, пользователи с некоторыми формами дальтонизма не смогут отличить красное поле от обычного или валидного.</li>
    <li>Всегда дополняйте визуальное выделение не валидного поля сообщением об ошибке. Из сообщения должно быть понятно не только наличие ошибки, но и дальнейшие действия пользователя для ее предотвращения. Напрмер:
        <ul>
            <li><em>Плохо:</em> Цена введена неверно.</li>
            <li><em>Хорошо:</em> Поле "Цена" должно содержать только числовые символы.</li>
        </ul>
        <ul>
            <li><em>Плохо:</em> "Текст обращения" слишком короткое.</li>
            <li><em>Хорошо:</em> Поле "Текст обращения" должно содержать не менее 100 символов текста.</li>
        </ul>
    </li>
    <li>Выводите сообщение об ошибках несколькими способами: одним сообщением на странице и/или сообщением у каждого поля. Примеры рассмотрим ниже.</li>
</ul>

<h3>Вывод общего сообщения на странице</h3>
<p>Если вы отправляете форму через <code>ajax</code>, то нужно создать блок с атрибутом <code>role="alert"</code> и поместить в него все сообщения. После этого блок нужно добавить на страницу на видное место, чтобы зрячие пользователи его заметили. Как только блок с <code>role="alert"</code> появится на странице, экранные чтецы озвучат его содержимое и незрячие пользователи тоже узнают об ошибках.</p>
<p>Дополнительно для полей, имеющих ошибки, поставьте атрибут <code>aria-invalid="true"</code> &ndash; электронные чтецы в данном случае дополнительно озвучат, что поле не валидно.</p>
<p><b>Важно.</b> Если вывод сообщения об ошибке происходит с перезагрузкой страницы, то измените <code>title</code> страницы и/или заголовок <code>h1</code> на сообщение о присутствии ошибок на странице.</p>
<form class="form" onsubmit="return false;">
{{ macros.html(view.common()) }}
</form>

<h3>Вывод сообщения об ошибке непосредственно для поля</h3>
<p>Добавьте не валидному полю атрибут <code>aria-invalid="true"</code>.</p>
<p>Добавьте рядом с полем текст сообщения об ошибке.</p>
<p>Свяжите сообщение об ошибке и поле через общее значение атрибутов <code>id, aria-labelledby</code>.</p>
<p>Экранные чтецы в данном случае при работе с полем не только зачитают, что оно неверно заполнено, но и озвучат сообщение об ошибке, чтобы пользователь понял свои дальнейшие действия.</p>
<form class="form" onsubmit="return false;">
    {{ macros.html(view.input()) }}
</form>

<h3>Рекомендации</h3>
<p>Мы рекомендуем использовать оба подхода, то есть сообщать пользователяем в блоке с <code>role="alert"</code> о наличии ошибок и дополнительно указывать ошибки для каждого отдельно взятого поля. Таким образом форма будет максимально доступна не только пользователям с нарушениям зрения, но и рядовым пользователям сайта.</p>